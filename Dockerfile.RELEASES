## Build layer
# When update node ---> remember to update all .sh files
FROM node:14.14.0 as verify
WORKDIR /app
COPY package.json yarn.lock ./

# Download dependencies
RUN yarn

# Copy source files
COPY . .

# Run tests and verify other requirements
RUN yarn verify

# Build project
FROM verify as build
ARG environment
RUN yarn build:$environment

# Build project
FROM verify as build_cdn
ENV REACT_APP_ROUTER=hash
ENV PUBLIC_URL="."
ARG environment
RUN yarn build:$environment

## Publish into new CDN using SFTP
## Using a third party image here, with specific digest (f7f7607...) to avoid unwanted changes
FROM ttionya/openssh-client@sha256:f7f7607d56f09a7c42e246e9c256ff51cf2f0802e3b2d88da6537bea516fe142
COPY --from=build_cdn /app/build /source
ARG environment
ARG pkgVersion
ARG CDN_SFTP_PORT
ARG CDN_SFTP_USERNAME
ARG CDN_SFTP_HOSTNAME
ARG CDN_SFTP_BASE
ARG SSH_PRIVATE_KEY
ARG SSH_KNOWN_HOSTS
RUN mkdir /root/.ssh/ &&\
    echo "${SSH_PRIVATE_KEY}" > /root/.ssh/id_rsa &&\
    chmod 600 /root/.ssh/id_rsa &&\
    echo "${SSH_KNOWN_HOSTS}" > /root/.ssh/known_hosts &&\
    chmod 600 /root/.ssh/known_hosts
RUN scp -P "${CDN_SFTP_PORT}" -r /source "${CDN_SFTP_USERNAME}@${CDN_SFTP_HOSTNAME}:/${CDN_SFTP_BASE}/doppler-webapp/${environment}-${pkgVersion}"
RUN echo "Files published on http://cdn.fromdoppler.com/doppler-webapp/${environment}-${pkgVersion}"


# Runtime layer (Host project in nginx)
FROM nginx:1.19.6-alpine
WORKDIR /app
ARG environment
COPY conf/site-${environment}.conf /etc/nginx/conf.d/site.conf
COPY --from=build /app/build /usr/share/nginx/html

ARG cdnBaseUrl
ARG environment
ARG pkgVersion
ARG versionFull
ARG pkgBuild
ARG pkgCommitId
# Create version.txt file (WARNING: duplicated code for optimizing build)
RUN printf "$cdnBaseUrl\n$environment\n$pkgVersion\n$versionFull\nbuildNo$pkgBuild\n$pkgCommitId" > /usr/share/nginx/html/version.txt

ENTRYPOINT ["nginx", "-g", "daemon off;"]
EXPOSE 80 443
